#!/bin/bash

#########################################################################################
# Gets a random strong password encryped with an RSA key protected by Unbound CORE KMS.
#
# This script tries to communicate with Unbound CORE server through the Unbound CORE
# Client software.
# If the client software is not found then the script will use Unbound CORE REST API for
# communication with the server
#
# The encrypted password is stored in a file along with the encryption key UID.
# The file path can be set using the UB_PASSWORD_FILE env variable.
#
# If the file is not found, for example on the first run of this script),
# a new random password is created
#
# The password can be reset by setting the env variable RESET_PASSWORD to YES
#
# Every time the script is executed, it encrypts the password again with the latest
# version of the key, this supports key rotation for increased security.
#
# The script returns the cleartext password
#########################################################################################
set +e
# Check if Unbound CORE Client is installed
ucl version 1>/dev/null 2>&1
UCL_ERR=$?
set -e
if [[ $UCL_ERR -eq 0 ]]; then 
    tmp_passphrase=$(ub-get-password-with-core-client)
else
    tmp_passphrase=$(ub-get-password-with-rest-api)
fi
echo $tmp_passphrase